
package org.example;
import lombok.Getter;
import lombok.Setter;
import org.example.bot.TradingBot;
import org.example.bybit.client.BybitWebSocketClient;
import org.example.monitor.PriceMonitor;
import org.example.util.LoggerUtils;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

@Getter
@Setter
// TradingBotApplication.java
public class TradingBotApplication {
    public static void main(String[] args) {
        ExecutorService executor = Executors.newFixedThreadPool(4);
        Locale.setDefault(Locale.US);

        try {
            TradingBot tradingBot = new TradingBot();


            PriceMonitor priceMonitor = new PriceMonitor(
                    tradingBot.getActiveDealStore(),
                    tradingBot.getMessageSender(),
                    tradingBot.getStopLossManager(),
                    tradingBot.getUpdateManager(),
                    tradingBot.getBybitManager()
            );

            // üî• –ü–µ—Ä–µ–¥–∞—ë–º —Å—Å—ã–ª–∫—É –Ω–∞ –º–µ—Ç–æ–¥, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π PriceUpdate
            BybitWebSocketClient webSocketClient = new BybitWebSocketClient(priceMonitor::onPriceUpdate);

            priceMonitor.setWebSocketClient(webSocketClient);
            webSocketClient.connect();
            tradingBot.getActiveDealStore().addOnDealAddedListener(priceMonitor::subscribe);
            tradingBot.getActiveDealStore().addOnDealRemovedListener(priceMonitor::unsubscribe);

            executor.submit(priceMonitor::startMonitoringAllDeals);

            executor.submit(() -> {
                try {
                    TelegramBotsApi botsApi = new TelegramBotsApi(DefaultBotSession.class);
                    botsApi.registerBot(tradingBot);
                } catch (Exception e) {
                    LoggerUtils.error("Main - –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Telegram-–±–æ—Ç–∞: " + e.getMessage(), e);
                }
            });

            LoggerUtils.info("Main - üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...");

            Runtime.getRuntime().addShutdownHook(new Thread(() -> {
                LoggerUtils.info("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...");
                webSocketClient.disconnect();
                executor.shutdownNow();
            }));

        } catch (Exception e) {
            LoggerUtils.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã", e);
            executor.shutdownNow();
        }
    }
}




!!!—Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—å—Å—Ç–≤–æ —Å –ª–æ–≥–∞–º–∏ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–¥–∏–Ω–≥–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ —á–∏—Ç–∞–π —Ç—É—Ç:

1) –ª–æ–≥–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ qwen (–¥–æ–∫—É–º–µ–Ω—Ç "–æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –∑–∞–ø—É—Å–∫ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ"), –ø—Ä–æ—á–∏—Ç–∞–π –æ—Ç–≤–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
        –∏ —É—Å—Ç—Ä–∞–Ω–∏ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å –≤ –∫–æ–¥–µ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏, –ø–æ—á–µ–º—É —Å–¥–µ–ª–∫–∞ —Ç–æ –∞–∫—Ç–∏–≤–Ω–∞ —Ç–æ –Ω–µ—Ç, –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ!!!











